% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multimeter.R
\name{mm_get_missing_meter}
\alias{mm_get_missing_meter}
\title{Compare missingness fractions in each column of a data
frame and print any increases in missingness.}
\usage{
mm_get_missing_meter()
}
\value{
a new Multimeter tuned to look for missing values
}
\description{
This is useful after \code{mutate} operations but may give
false positives after a \code{summarize}.
}
\examples{
if (interactive()) {
  # Function to randomly create NAs in a variable
  maybe_na <- function(x, prob = 0.2) {
    n <- base::length(x)
    missing_of_type_x <- vctrs::vec_cast(NA, to = vctrs::vec_ptype(x))
    dplyr::if_else(stats::runif(n) < prob, missing_of_type_x, x)
  }
  # In pieces, to see what's going on
  missing_meter <- mm_get_missingness_meter()
  library(dplyr)
  missing_meter$probe(starwars)
  set.seed(2021L + 06L + 28L)
  starwars2 <- starwars \%>\%
    mutate(homeworld = maybe_na(homeworld))
  missing_meter$probe(starwars2)
  print(missing_meter$comparison)

  # All together in one pipeline
  starwars2 <- starwars \%>\%
    missing_meter$reset() \%>\%
    missing_meter$probe() \%>\%
    mutate(homeworld = maybe_na(homeworld)) \%>\%
    missing_meter$probe()
  print(missing_meter$comparison)
}
}
